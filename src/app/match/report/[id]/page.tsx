"use client";

import { useEffect, useState } from "react";
import { useParams, useRouter } from "next/navigation";
import { Button } from "@/shared/ui/button";
import { Progress } from "@/shared/ui/progress";
import { ArrowLeft, Sparkles, RefreshCw, Zap, TrendingUp } from "lucide-react";
import { useAuth } from "@/contexts/AuthContext";
import { useUserStore } from "@/shared/store/userStore";
import { getMatchRepo, getUserRepo } from "@/core/infra/RepositoryFactory";
import { generateEnhancedMatchReport } from "@/core/services/MatchService";
import { MatchReport } from "@/features/match/components/match-report";
import { LoadingScreen } from "@/features/survey/components/loading-screen";
import { toast } from "sonner";
import type { Match, User } from "@/shared/types/domain";

export default function MatchReportPage() {
  const params = useParams<{ id: string }>();
  const router = useRouter();
  const { user } = useAuth();
  const { profile } = useUserStore();

  const [match, setMatch] = useState<Match | null>(null);
  const [otherUser, setOtherUser] = useState<User | null>(null);
  const [otherUserInterests, setOtherUserInterests] = useState<string[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  const [isGeneratingReport, setIsGeneratingReport] = useState(false);
  const [isRecalculating, setIsRecalculating] = useState(false);
  const [recalculateProgress, setRecalculateProgress] = useState(0);
  const [error, setError] = useState<string | null>(null);

  // ÎÇ¥ Ïù¥Î¶Ñ Í∞ÄÏ†∏Ïò§Í∏∞ (Ïö∞ÏÑ†ÏàúÏúÑ: profile.name > user.email ÏïûÎ∂ÄÎ∂Ñ > "ÎãπÏã†")
  const myName = profile?.name || user?.email?.split("@")[0] || "ÎãπÏã†";

  const loadMatchReport = async () => {
    if (!user) {
      router.push("/auth/login");
      return;
    }

    try {
      const matchData = await getMatchRepo().getById(params.id);

      if (!matchData) {
        setError("Îß§Ïπ≠ Ï†ïÎ≥¥Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§");
        return;
      }

      // Check if current user is part of this match
      if (matchData.user1Id !== user.id && matchData.user2Id !== user.id) {
        setError("Ïù¥ Îß§Ïπ≠ Í≤∞Í≥ºÎ•º Î≥º Í∂åÌïúÏù¥ ÏóÜÏäµÎãàÎã§");
        return;
      }

      setMatch(matchData);

      // Get the other user's info and interests
      const otherUserId =
        matchData.user1Id === user.id ? matchData.user2Id : matchData.user1Id;

      console.log(
        "üîç ÏÉÅÎåÄÎ∞© ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ Ï°∞Ìöå ÏãúÏûë - otherUserId:",
        otherUserId
      );

      // Í∏∞Î≥∏ ÏÇ¨Ïö©Ïûê Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞
      const otherUserData = await getUserRepo().getById(otherUserId);
      setOtherUser(otherUserData);

      // ÏÉÅÎåÄÎ∞©Ïùò ÌîÑÎ°úÌïÑ Ï†ïÎ≥¥ Í∞ÄÏ†∏Ïò§Í∏∞ (Í¥ÄÏã¨ÏÇ¨ Ìè¨Ìï®)
      try {
        const otherUserProfile = await getUserRepo().getProfile(otherUserId);
        console.log("üìä ÏÉÅÎåÄÎ∞© ÌîÑÎ°úÌïÑ Ï†ïÎ≥¥:", otherUserProfile);

        if (otherUserProfile && otherUserProfile.interests) {
          console.log("‚úÖ ÏÉÅÎåÄÎ∞© Í¥ÄÏã¨ÏÇ¨ Î∞úÍ≤¨:", otherUserProfile.interests);
          setOtherUserInterests(otherUserProfile.interests);
        } else {
          console.log("‚ö†Ô∏è ÏÉÅÎåÄÎ∞© Í¥ÄÏã¨ÏÇ¨ Ï†ïÎ≥¥ ÏóÜÏùå, Í≥µÌÜµ Í¥ÄÏã¨ÏÇ¨ ÏÇ¨Ïö©");
          // Ìè¥Î∞±: Í≥µÌÜµ Í¥ÄÏã¨ÏÇ¨ÎùºÎèÑ ÏÇ¨Ïö©
          const commonTags = matchData.commonInterests?.tags || [];
          setOtherUserInterests(commonTags);
        }
      } catch (profileError) {
        console.error("‚ùå ÏÉÅÎåÄÎ∞© ÌîÑÎ°úÌïÑ Ï°∞Ìöå ÏóêÎü¨:", profileError);
        // ÏóêÎü¨ Ïãú Í≥µÌÜµ Í¥ÄÏã¨ÏÇ¨ÎùºÎèÑ ÏÇ¨Ïö©
        const commonTags = matchData.commonInterests?.tags || [];
        setOtherUserInterests(commonTags);
      }
    } catch (error) {
      console.error("Error loading match report:", error);
      setError("Îß§Ïπ≠ Î¶¨Ìè¨Ìä∏Î•º Î∂àÎü¨Ïò§Îäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§");
    } finally {
      setIsLoading(false);
    }
  };

  const handleGenerateEnhancedReport = async () => {
    if (!match) return;

    setIsGeneratingReport(true);
    try {
      console.log("üîÑ Ìñ•ÏÉÅÎêú Î¶¨Ìè¨Ìä∏ ÏÉùÏÑ± ÏãúÏûë - matchId:", match.id);

      // Í∞ïÏ†úÎ°ú ÏÉà Î¶¨Ìè¨Ìä∏ ÏÉùÏÑ± (force=true)
      const newInsights = await generateEnhancedMatchReport(match.id, true);
      console.log(
        "‚úÖ ÏÉà Î¶¨Ìè¨Ìä∏ ÏÉùÏÑ± ÏôÑÎ£å:",
        newInsights.substring(0, 50) + "..."
      );

      // Î¶¨Ìè¨Ìä∏ Ïû¨Î°úÎìú
      await loadMatchReport();

      // Î¶¨Ìè¨Ìä∏ ÏÉùÏÑ± ÏÑ±Í≥µ Î©îÏãúÏßÄ
      toast.success("Îß§Ïπ≠ Î¶¨Ìè¨Ìä∏ Ïû¨Î∂ÑÏÑù ÏôÑÎ£å!", {
        description:
          "ÏÉàÎ°úÏö¥ Í¥ÄÏ†êÏóêÏÑú Î∂ÑÏÑùÌïú Îß§Ïπ≠ Ïù∏ÏÇ¨Ïù¥Ìä∏Í∞Ä ÏóÖÎç∞Ïù¥Ìä∏ÎêòÏóàÏäµÎãàÎã§.",
        duration: 5000,
      });
    } catch (error) {
      console.error("Ìñ•ÏÉÅÎêú Î¶¨Ìè¨Ìä∏ ÏÉùÏÑ± Ïã§Ìå®:", error);
      toast.error("Î¶¨Ìè¨Ìä∏ ÏÉùÏÑ± Ïã§Ìå®", {
        description: "Ìñ•ÏÉÅÎêú Î¶¨Ìè¨Ìä∏Î•º ÏÉùÏÑ±ÌïòÎäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§.",
      });
    } finally {
      setIsGeneratingReport(false);
    }
  };

  // üîÑ ÏôÑÏ†ÑÌïú Îß§Ïπ≠ Ïû¨Í≥ÑÏÇ∞ Ìï®Ïàò
  const handleRecalculateMatch = async () => {
    if (!match) return;

    setIsRecalculating(true);
    setRecalculateProgress(0);

    try {
      console.log("üîÑ ÏôÑÏ†Ñ Îß§Ïπ≠ Ïû¨Í≥ÑÏÇ∞ ÏãúÏûë");

      // ÏßÑÌñâÎ•† Ïï†ÎãàÎ©îÏù¥ÏÖò
      const progressInterval = setInterval(() => {
        setRecalculateProgress((prev) => {
          if (prev >= 95) return prev;
          return prev + Math.random() * 10 + 2;
        });
      }, 300);

      // Îß§Ïπ≠ Ïû¨Í≥ÑÏÇ∞ API Ìò∏Ï∂ú
      const response = await fetch("/api/recalculate-match", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ matchId: match.id }),
      });

      clearInterval(progressInterval);

      if (!response.ok) {
        throw new Error("Îß§Ïπ≠ Ïû¨Í≥ÑÏÇ∞ API Ìò∏Ï∂ú Ïã§Ìå®");
      }

      const result = await response.json();
      console.log("‚úÖ Îß§Ïπ≠ Ïû¨Í≥ÑÏÇ∞ Í≤∞Í≥º:", result);

      // ÏßÑÌñâÎ•† 100%Î°ú ÏÑ§Ï†ï
      setRecalculateProgress(100);

      // ÏÉàÎ°úÏö¥ matchIdÎ°ú URL ÏóÖÎç∞Ïù¥Ìä∏ (Í∏∞Î°ù ÎÇ®Í∏∞ÏßÄ ÏïäÍ≥† ÍµêÏ≤¥)
      if (result.matchId && result.matchId !== params.id) {
        console.log("üîÑ ÏÉàÎ°úÏö¥ Îß§Ïπ≠ IDÎ°ú URL ÏóÖÎç∞Ïù¥Ìä∏:", result.matchId);
        window.history.replaceState(
          null,
          "",
          `/match/report/${result.matchId}`
        );
        params.id = result.matchId; // params ÏóÖÎç∞Ïù¥Ìä∏
      }

      // Ïû†Ïãú ÌõÑ Îç∞Ïù¥ÌÑ∞ ÏÉàÎ°úÍ≥†Ïπ®
      setTimeout(async () => {
        await loadMatchReport();

        // Î≥ÄÍ≤ΩÏÇ¨Ìï≠ Î∂ÑÏÑù Î∞è ÏïåÎ¶º
        if (result.changes && result.changes.significantChange) {
          const changeMessages = [];

          if (result.changes.scoreChanged) {
            const diff = result.changes.scoreDifference;
            changeMessages.push(
              `Îß§Ïπ≠ Ï†êÏàò: ${diff > 0 ? "‚ÜóÔ∏è" : "‚ÜòÔ∏è"} ${Math.abs(diff)}Ï†ê ${
                diff > 0 ? "ÏÉÅÏäπ" : "ÌïòÎùΩ"
              }`
            );
          }

          if (result.changes.tagsAdded > 0) {
            changeMessages.push(
              `üîç ÏÉàÎ°úÏö¥ Í≥µÌÜµ Í¥ÄÏã¨ÏÇ¨ ${result.changes.tagsAdded}Í∞ú Î∞úÍ≤¨`
            );
          }

          if (result.changes.tagsRemoved > 0) {
            changeMessages.push(
              `üìù Ïù¥Ï†Ñ Í¥ÄÏã¨ÏÇ¨ ${result.changes.tagsRemoved}Í∞ú ÏóÖÎç∞Ïù¥Ìä∏Îê®`
            );
          }

          if (result.changes.newCommonResponses !== 0) {
            changeMessages.push(
              `üí¨ Í≥µÌÜµ ÏùëÎãµ ${
                result.changes.newCommonResponses > 0 ? "Ï∂îÍ∞Ä" : "Î≥ÄÍ≤Ω"
              }Îê®`
            );
          }

          toast.success("Îß§Ïπ≠ Î¶¨Ìè¨Ìä∏Í∞Ä ÏóÖÎç∞Ïù¥Ìä∏ÎêòÏóàÏäµÎãàÎã§!", {
            description: changeMessages.join("\n"),
          });
        } else {
          toast.success("Îß§Ïπ≠ Î¶¨Ìè¨Ìä∏Î•º ÏÉàÎ°úÍ≥†Ïπ®ÌñàÏäµÎãàÎã§!", {
            description:
              "ÏµúÏã† ÏÑ§Î¨∏ Îç∞Ïù¥ÌÑ∞Î•º Î∞òÏòÅÌïòÏó¨ AI Î∂ÑÏÑùÏùÑ Îã§Ïãú Ïã§ÌñâÌñàÏñ¥Ïöî.",
          });
        }
      }, 1000);
    } catch (error) {
      console.error("‚ùå Îß§Ïπ≠ Ïû¨Í≥ÑÏÇ∞ Ïã§Ìå®:", error);
      toast.error("Îß§Ïπ≠ Ïû¨Í≥ÑÏÇ∞ Ïã§Ìå®", {
        description:
          "Îß§Ïπ≠ÏùÑ Ïû¨Í≥ÑÏÇ∞ÌïòÎäî Ï§ë Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§. Îã§Ïãú ÏãúÎèÑÌï¥Ï£ºÏÑ∏Ïöî.",
      });
    } finally {
      setTimeout(() => {
        setIsRecalculating(false);
        setRecalculateProgress(0);
      }, 1500);
    }
  };

  useEffect(() => {
    loadMatchReport();
  }, [params.id, router, user]);

  if (isLoading) {
    return <LoadingScreen />;
  }

  if (error || !match) {
    return (
      <div className="flex flex-col min-h-screen bg-gradient-to-b from-green-50 to-blue-50 p-4 items-center justify-center">
        <div className="w-full max-w-md p-6 text-center">
          <h2 className="text-xl font-bold text-red-500 mb-4">
            Ïò§Î•òÍ∞Ä Î∞úÏÉùÌñàÏäµÎãàÎã§
          </h2>
          <p className="mb-4">{error}</p>
          <Button onClick={() => router.push("/profile")}>
            ÌîÑÎ°úÌïÑÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞
          </Button>
        </div>
      </div>
    );
  }

  const matchResult = {
    score: match.matchScore,
    commonTags: match.commonInterests?.tags || [],
    commonResponses: match.commonInterests?.responses || [],
    aiInsights: match.aiInsights,
  };

  const hasBasicInsights = match.aiInsights && match.aiInsights.length <= 200;
  const hasEnhancedInsights = match.aiInsights && match.aiInsights.length > 200;

  return (
    <div className="flex flex-col min-h-screen bg-gradient-to-b from-green-50 to-blue-50 p-4">
      <div className="flex items-center justify-between mb-6">
        <div className="flex items-center">
          <Button
            variant="ghost"
            size="icon"
            onClick={() => router.back()}
            className="mr-2"
          >
            <ArrowLeft className="h-5 w-5 text-gray-600" />
          </Button>
          <h1 className="text-xl font-bold text-gray-800">Îß§Ïπ≠ Î¶¨Ìè¨Ìä∏</h1>
        </div>

        {/* Ìñ•ÏÉÅÎêú Î¶¨Ìè¨Ìä∏ ÏÉùÏÑ± Î≤ÑÌäº - Ìï≠ÏÉÅ ÌëúÏãúÌïòÎêò ÌÖçÏä§Ìä∏Îäî ÏÉÅÌô©Ïóê Îî∞Îùº Î≥ÄÍ≤Ω */}
        <div className="flex gap-2">
          {/* ÏÉÅÏÑ∏ Î∂ÑÏÑù Î≤ÑÌäº */}
          <Button
            onClick={handleGenerateEnhancedReport}
            disabled={isGeneratingReport || isRecalculating}
            className="bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600"
          >
            {isGeneratingReport ? (
              <>
                <RefreshCw className="mr-2 h-4 w-4 animate-spin" />
                AI Î∂ÑÏÑù Ï§ë...
              </>
            ) : hasEnhancedInsights ? (
              <>
                <Sparkles className="mr-2 h-4 w-4" />
                Î¶¨Ìè¨Ìä∏ Ïû¨Î∂ÑÏÑù
              </>
            ) : (
              <>
                <Sparkles className="mr-2 h-4 w-4" />
                ÏÉÅÏÑ∏ Î∂ÑÏÑù ÏÉùÏÑ±
              </>
            )}
          </Button>

          {/* üîÑ ÏôÑÏ†Ñ ÏÉàÎ°úÍ≥†Ïπ® Î≤ÑÌäº */}
          <Button
            onClick={handleRecalculateMatch}
            disabled={isGeneratingReport || isRecalculating}
            variant="outline"
            className="border-2 border-blue-300 hover:border-blue-400 hover:bg-blue-50 text-blue-700"
          >
            {isRecalculating ? (
              <>
                <RefreshCw className="mr-2 h-4 w-4 animate-spin" />
                Ïû¨Í≥ÑÏÇ∞ Ï§ë...
              </>
            ) : (
              <>
                <TrendingUp className="mr-2 h-4 w-4" />
                Îß§Ïπ≠ ÏÉàÎ°úÍ≥†Ïπ®
              </>
            )}
          </Button>

          {/* üîç Í¥ÄÏã¨ÏÇ¨ ÎîîÎ≤ÑÍπÖ Î≤ÑÌäº (ÏûÑÏãú) */}
          <Button
            onClick={() => {
              console.log("üîç Í¥ÄÏã¨ÏÇ¨ ÎîîÎ≤ÑÍπÖ Ï†ïÎ≥¥:", {
                otherUserInterests,
                otherUserInterestsLength: otherUserInterests.length,
                otherUser,
                match: match?.commonInterests,
                matchTags: match?.commonInterests?.tags,
              });
              toast.success("ÏΩòÏÜîÏóêÏÑú ÎîîÎ≤ÑÍπÖ Ï†ïÎ≥¥Î•º ÌôïÏù∏ÌïòÏÑ∏Ïöî!", {
                description: `ÏÉÅÎåÄÎ∞© Í¥ÄÏã¨ÏÇ¨: ${otherUserInterests.length}Í∞ú Î∞úÍ≤¨`,
              });
            }}
            variant="outline"
            size="sm"
            disabled={isRecalculating}
          >
            üîç ÎîîÎ≤ÑÍ∑∏
          </Button>
        </div>
      </div>

      {/* üîÑ Ïû¨Í≥ÑÏÇ∞ Ï§ë Î°úÎî© Ïò§Î≤ÑÎ†àÏù¥ */}
      {isRecalculating && (
        <div className="fixed inset-0 bg-black/50 backdrop-blur-sm z-50 flex items-center justify-center">
          <div className="bg-white rounded-xl p-8 max-w-md w-full mx-4 shadow-2xl">
            <div className="text-center space-y-6">
              {/* Ï†úÎ™© */}
              <div className="space-y-2">
                <div className="relative mx-auto w-16 h-16">
                  <div className="absolute inset-0 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full animate-pulse opacity-20"></div>
                  <div className="absolute inset-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center">
                    <Zap className="text-white" size={24} />
                  </div>
                </div>
                <h2 className="text-xl font-bold text-gray-800">
                  Îß§Ïπ≠ ÏôÑÏ†Ñ ÏÉàÎ°úÍ≥†Ïπ®
                </h2>
                <p className="text-sm text-gray-600">
                  ÏµúÏã† ÏÑ§Î¨∏ Îç∞Ïù¥ÌÑ∞Î°ú Îß§Ïπ≠ÏùÑ Îã§Ïãú Í≥ÑÏÇ∞ÌïòÍ≥†
                  <br />
                  AI Î∂ÑÏÑùÏùÑ ÏÉàÎ°ú Ïã§ÌñâÌïòÍ≥† ÏûàÏñ¥Ïöî
                </p>
              </div>

              {/* ÏßÑÌñâÎ•† */}
              <div className="space-y-3">
                <Progress value={recalculateProgress} className="w-full h-3" />
                <div className="text-sm text-gray-500">
                  {recalculateProgress < 30
                    ? "üîÑ ÏÑ§Î¨∏ Îç∞Ïù¥ÌÑ∞ Î∂ÑÏÑù Ï§ë..."
                    : recalculateProgress < 60
                    ? "üßÆ Îß§Ïπ≠ Ï†êÏàò Ïû¨Í≥ÑÏÇ∞ Ï§ë..."
                    : recalculateProgress < 90
                    ? "ü§ñ AI Í∏∞Î∞ò Ïù∏ÏÇ¨Ïù¥Ìä∏ ÏÉùÏÑ± Ï§ë..."
                    : "‚ú® ÎßàÏßÄÎßâ Ï†ïÎ¶¨ Ï§ë..."}
                </div>
              </div>

              {/* Îã®Í≥ÑÎ≥Ñ Ï†ïÎ≥¥ */}
              <div className="grid grid-cols-1 gap-2 text-xs text-gray-500">
                <div
                  className={`flex items-center gap-2 ${
                    recalculateProgress > 0 ? "text-blue-600" : ""
                  }`}
                >
                  <div
                    className={`w-2 h-2 rounded-full ${
                      recalculateProgress > 0 ? "bg-blue-500" : "bg-gray-300"
                    }`}
                  ></div>
                  ÏÑ§Î¨∏ ÏùëÎãµ Îç∞Ïù¥ÌÑ∞ ÏàòÏßë
                </div>
                <div
                  className={`flex items-center gap-2 ${
                    recalculateProgress > 30 ? "text-blue-600" : ""
                  }`}
                >
                  <div
                    className={`w-2 h-2 rounded-full ${
                      recalculateProgress > 30 ? "bg-blue-500" : "bg-gray-300"
                    }`}
                  ></div>
                  Îß§Ïπ≠ Ï†êÏàò & Í≥µÌÜµÏ†ê Î∂ÑÏÑù
                </div>
                <div
                  className={`flex items-center gap-2 ${
                    recalculateProgress > 60 ? "text-blue-600" : ""
                  }`}
                >
                  <div
                    className={`w-2 h-2 rounded-full ${
                      recalculateProgress > 60 ? "bg-blue-500" : "bg-gray-300"
                    }`}
                  ></div>
                  AI Ïù∏ÏÇ¨Ïù¥Ìä∏ ÏÉùÏÑ±
                </div>
                <div
                  className={`flex items-center gap-2 ${
                    recalculateProgress > 90 ? "text-blue-600" : ""
                  }`}
                >
                  <div
                    className={`w-2 h-2 rounded-full ${
                      recalculateProgress > 90 ? "bg-blue-500" : "bg-gray-300"
                    }`}
                  ></div>
                  Î¶¨Ìè¨Ìä∏ ÏóÖÎç∞Ïù¥Ìä∏ ÏôÑÎ£å
                </div>
              </div>
            </div>
          </div>
        </div>
      )}

      <div className="flex-1 max-w-2xl mx-auto w-full">
        <MatchReport
          matchResult={matchResult}
          user1Name={myName}
          user2Name={otherUser?.name || "ÏÉÅÎåÄÎ∞©"}
          partnerInterests={otherUserInterests}
          userId={user?.id} // userId Ï†ÑÎã¨
        />
      </div>

      <div className="mt-6 space-y-3">
        {/* Îß§Ïπ≠ ÏÉÅÌÉú ÏïàÎÇ¥ */}
        <div className="bg-gradient-to-r from-blue-50 to-purple-50 border border-blue-200 rounded-lg p-4">
          <div className="flex items-start space-x-3">
            <div className="flex-shrink-0">
              <div className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center">
                <TrendingUp className="text-white" size={16} />
              </div>
            </div>
            <div className="flex-1 space-y-1">
              <h3 className="text-sm font-medium text-gray-900">
                üí° Îß§Ïπ≠ Î¶¨Ìè¨Ìä∏ ÏóÖÎç∞Ïù¥Ìä∏ ÏïàÎÇ¥
              </h3>
              <p className="text-sm text-gray-600 leading-relaxed">
                ÏÑ§Î¨∏ÏùÑ ÏÉàÎ°ú ÏßÑÌñâÌñàÍ±∞ÎÇò ÏÉÅÎåÄÎ∞©Ïù¥ Ï∂îÍ∞Ä ÏÑ§Î¨∏ÏùÑ ÌñàÎã§Î©¥,{" "}
                <strong>"Îß§Ïπ≠ ÏÉàÎ°úÍ≥†Ïπ®"</strong>ÏùÑ ÎàåÎü¨ ÏµúÏã† Îç∞Ïù¥ÌÑ∞Î°ú Îß§Ïπ≠
                Ï†êÏàòÏôÄ AI Î∂ÑÏÑùÏùÑ ÏóÖÎç∞Ïù¥Ìä∏ÌïòÏÑ∏Ïöî. ÏÉàÎ°úÏö¥ Í≥µÌÜµÏ†êÏùÑ Î∞úÍ≤¨Ìï† Ïàò
                ÏûàÏñ¥Ïöî! ‚ú®
              </p>
            </div>
          </div>
        </div>

        {/* ÌîÑÎ°úÌïÑÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞ Î≤ÑÌäºÎßå Ïú†ÏßÄ */}
        <Button
          variant="outline"
          className="w-full"
          onClick={() => router.push("/profile")}
        >
          ÌîÑÎ°úÌïÑÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞
        </Button>
      </div>
    </div>
  );
}
